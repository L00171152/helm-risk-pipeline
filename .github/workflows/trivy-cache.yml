name: Trivy Cache Benchmark

on:
  workflow_dispatch:
    inputs:
      repetitions:
        description: "How many runs per mode (>=3 recommended)"
        required: true
        default: "5"
      imageRef:
        description: "Image to scan (e.g., nginx:latest)"
        required: true
        default: "nginx:latest"

jobs:
  nocache:
    name: Uncached baseline
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Trivy (official installer)
        run: |
          set -e
          curl -sSfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh -o install.sh
          sh install.sh -b ./bin
          sudo mv ./bin/trivy /usr/local/bin/trivy
          trivy --version

      - name: Benchmark (no cache)
        shell: bash
        env:
          REPS: ${{ github.event.inputs.repetitions }}
          IMG:  ${{ github.event.inputs.imageRef }}
        run: |
          set -e
          out="cache_benchmark_results.csv"
          echo "run,mode,duration_seconds" > "$out"
          for i in $(seq 1 "$REPS"); do
            export TRIVY_CACHE_DIR="$RUNNER_TEMP/trivy-cache-$i"   # fresh dir => cold DB
            mkdir -p "$TRIVY_CACHE_DIR"
            start=$(date +%s)
            trivy --download-db-only
            trivy image --quiet --format json "$IMG" > "trivy-nocache-$i.json"
            end=$(date +%s)
            dur=$((end-start))
            echo "Run $i (nocache): ${dur}s" | tee -a $GITHUB_STEP_SUMMARY
            echo "$i,nocache,$dur" >> "$out"
          done

      - name: Upload artifacts (nocache)
        uses: actions/upload-artifact@v4
        with:
          name: trivy-cache-benchmark-nocache
          path: |
            cache_benchmark_results.csv
            trivy-nocache-*.json

  cache:
    name: Cached runs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Trivy (official installer)
        run: |
          set -e
          curl -sSfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh -o install.sh
          sh install.sh -b ./bin
          sudo mv ./bin/trivy /usr/local/bin/trivy
          trivy --version

      - name: Restore Trivy DB cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/trivy
          key: trivy-db-${{ runner.os }}-v1
          restore-keys: trivy-db-

      - name: Benchmark (cached)
        shell: bash
        env:
          REPS: ${{ github.event.inputs.repetitions }}
          IMG:  ${{ github.event.inputs.imageRef }}
          TRIVY_CACHE_DIR: ${{ runner.home }}/.cache/trivy
        run: |
          set -e
          out="cache_benchmark_results.csv"
          if [ ! -f "$out" ]; then echo "run,mode,duration_seconds" > "$out"; fi
          trivy --download-db-only  # should be fast with restored DB
          for i in $(seq 1 "$REPS"); do
            start=$(date +%s)
            trivy --download-db-only
            trivy image --quiet --format json "$IMG" > "trivy-cache-$i.json"
            end=$(date +%s)
            dur=$((end-start))
            echo "Run $i (cache): ${dur}s" | tee -a $GITHUB_STEP_SUMMARY
            echo "$i,cache,$dur" >> "$out"
          done

      - name: Upload artifacts (cache)
        uses: actions/upload-artifact@v4
        with:
          name: trivy-cache-benchmark-cache
          path: |
            cache_benchmark_results.csv
            trivy-cache-*.json

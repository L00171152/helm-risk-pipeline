name: SBOM + Trivy Scan

on:
  pull_request:
    paths:
      - 'charts/**'

permissions:
  contents: read
  issues: write        # <-- needed to create a PR (issue) comment
  pull-requests: write # optional, but fine to keep

jobs:
  sbom_trivy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: azure/setup-helm@v4

      - name: Install Syft (no sudo)
        run: |
          mkdir -p "$HOME/.local/bin"
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh \
            | sh -s -- -b "$HOME/.local/bin"
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"
          syft version

      - name: Install Trivy (no sudo)
        run: |
          mkdir -p "$HOME/.local/bin"
          curl -sSfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh \
            | sh -s -- -b "$HOME/.local/bin"
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"
          trivy --version

      - name: Generate SBOM (Syft)
        run: syft dir:./charts/myapp -o json > sbom.json

      - name: Render chart and collect container images
        id: images
        run: |
          set -euo pipefail
          mkdir -p /tmp/trivy
          IMAGES=$(helm template charts/myapp --dependency-update \
            | grep -Eo 'image:\s*["'\'']?[^"'\''[:space:]]+(:[[:alnum:]\.\-_]+)?' \
            | awk '{print $2}' | sed 's/"//g' | sort -u || true)
          echo "Found images:"; echo "$IMAGES"
          echo "images=$(echo "$IMAGES" | paste -sd, -)" >> "$GITHUB_OUTPUT"

      - name: Scan images with Trivy (if any)
        if: steps.images.outputs.images != ''
        run: |
          IFS=',' read -ra ARRS <<< "${{ steps.images.outputs.images }}"
          for img in "${ARRS[@]}"; do
            echo "Scanning $img"
            safe=$(echo "$img" | tr '/:' '__')
            trivy image --scanners vuln --ignore-unfixed \
              --format json --output "/tmp/trivy/${safe}.json" "$img"
          done
          shopt -s nullglob
          jq -s '.' /tmp/trivy/*.json > trivy_report.json

      - name: Fallback scan of chart filesystem (no images found)
        if: steps.images.outputs.images == ''
        run: |
          trivy fs --scanners vuln --ignore-unfixed \
            --format json --output trivy_report.json charts/myapp

      - name: Verify report exists
        run: test -s trivy_report.json || echo '{}' > trivy_report.json

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Run Risk Scoring
        run: python scripts/risk_analysis.py

      - name: Comment on PR with Risk
        if: github.event.pull_request.head.repo.full_name == github.repository
        uses: marocchino/sticky-pull-request-comment@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}   # pass token explicitly
        with:
          path: risk_summary.txt
          recreate: true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            sbom.json
            trivy_report.json
            /tmp/trivy/*.json
